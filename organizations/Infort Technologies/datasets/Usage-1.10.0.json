{
  "identity": {
    "id": "5a230408-6ae9-497f-b0de-154db49d7728",
    "name": "Usage",
    "description": "Enumerator of usages supported by service. Usage define how object used in DifHub service."
  },
  "version": {
    "major": 1,
    "minor": 10,
    "revision": 0
  },
  "object": {
    "parent": {
      "id": "c5135f7e-f0bf-4063-980f-14dc53e2e0fe",
      "name": "/organizations/Apdax/systems/DifHub/applications/Organization"
    },
    "picture": "",
    "tags": [],
    "documents": [],
    "type": "DataSet",
    "usage": "Enum",
    "access": "External",
    "properties": [
      {
        "identity": {
          "name": "x"
        },
        "type": "String",
        "value": "784"
      },
      {
        "identity": {
          "name": "y"
        },
        "type": "String",
        "value": "88"
      }
    ],
    "elements": [],
    "history": {
      "created": "2019-07-09T06:26:27.147",
      "createdBy": "sashaberger@hotmail.com",
      "updated": "2019-07-09T07:08:05.983",
      "updatedBy": "sashaberger@hotmail.com",
      "mirrored": "2018-10-23T06:51:54.59",
      "completions": [
        {
          "status": "Finalized",
          "completed": "2019-07-09T07:07:24.2",
          "completedBy": "sashaberger@hotmail.com",
          "completedByMessage": "/organizations/Apdax/systems/DifHub/applications/Organization/datasets/Usage/issues/3958/messages/3"
        },
        {
          "status": "Approved",
          "completed": "2019-07-09T07:08:05.803",
          "completedBy": "sashaberger@hotmail.com",
          "completedByMessage": "/organizations/Apdax/systems/DifHub/applications/Organization/datasets/Usage/issues/3958/messages/3"
        }
      ]
    },
    "lastApprovedVersion": {
      "major": 1,
      "minor": 10,
      "revision": 0
    }
  },
  "external": true,
  "structure": {
    "fields": [
      {
        "identity": {
          "id": "d174d7f3-4870-48a3-89d5-e42bb4bb898d",
          "name": "Usage",
          "description": "Usage identificator."
        },
        "order": 1,
        "usage": "Name",
        "type": "String",
        "optional": false,
        "privacy": "low"
      },
      {
        "identity": {
          "id": "5282ae38-fc91-485d-ab4f-095fb5c07b20",
          "name": "Description",
          "description": "Description of specific usage."
        },
        "order": 2,
        "usage": "Description",
        "type": "String",
        "optional": true,
        "privacy": "low"
      },
      {
        "identity": {
          "id": "909f968b-e4e8-4500-b83c-dda02ba97f20",
          "name": "Settings",
          "description": "List of attributes or reference to structure. List used for field to define required attributes. Structure will  be presented in advance settings for specific usage."
        },
        "order": 3,
        "usage": "Property",
        "count": 1,
        "type": "String",
        "optional": true,
        "privacy": "low"
      },
      {
        "identity": {
          "id": "a3660fe8-35e1-46cd-8982-48fa6c531ca4",
          "name": "Object",
          "description": "Object type usage applicable to. Type of the objects supported in usage represented in Class enumerator"
        },
        "order": 4,
        "usage": "Property",
        "count": 1,
        "type": "Enum",
        "reference": "/organizations/Apdax/systems/DifHub/applications/Organization/datasets/Class",
        "optional": true,
        "privacy": "low"
      }
    ],
    "keys": []
  },
  "layouts": [],
  "data": {
    "records": [
      {
        "index": 1,
        "values": [
          "Generic",
          "Generic system can contain any types of applications.",
          "",
          "System"
        ]
      },
      {
        "index": 2,
        "values": [
          "Database",
          "Database system represent relational or multidimensional database and can contain any applications of type schema, dimension or cube.",
          "",
          "System"
        ]
      },
      {
        "index": 3,
        "values": [
          "Service",
          "Generic service without any limitation on objects inside.",
          "",
          "Application"
        ]
      },
      {
        "index": 4,
        "values": [
          "Schema",
          "Relational schema, contains tables as datasets.",
          "",
          "Application"
        ]
      },
      {
        "index": 5,
        "values": [
          "Dimension",
          "Dimension for relational datawarehouse or multidimensional cube. Dimension contain tables, attributes and hierarchies as datasets.",
          "",
          "Application"
        ]
      },
      {
        "index": 6,
        "values": [
          "Cube",
          "Multidimensional cube, contains facts as datasets.",
          "",
          "Application"
        ]
      },
      {
        "index": 7,
        "values": [
          "Preferences",
          "User preferences. Maintain and defines set of user preferences as datasets.",
          "",
          "Application"
        ]
      },
      {
        "index": 8,
        "values": [
          "Table",
          "Simple flat column list of relational table. Table can contain only fields of usage column.",
          "",
          "Dataset"
        ]
      },
      {
        "index": 9,
        "values": [
          "Event",
          "Complex structure for event. Event contains list of simple fields and/or other complex structures.",
          "",
          "Dataset"
        ]
      },
      {
        "index": 10,
        "values": [
          "Resource",
          "Complex structure for REST API resource. Resource similar to event and contains list of simple fields and/or other complex structures.",
          "",
          "Dataset"
        ]
      },
      {
        "index": 11,
        "values": [
          "Structure",
          "Simple structure for use inside other types of dataset. Structure contains list of simple fields and/or other complex structures.",
          "",
          "Dataset"
        ]
      },
      {
        "index": 12,
        "values": [
          "Union",
          "Structure is a union of fields data. Only one field can be actual value of structure. ",
          "",
          "Dataset"
        ]
      },
      {
        "index": 13,
        "values": [
          "Enum",
          "Dataset as enumerator of values. Enumerators represented as simple flat list of fields. Field of usage name is requierd.",
          "",
          "Dataset"
        ]
      },
      {
        "index": 14,
        "values": [
          "Attribute",
          "Attribute contains set of fields required for level of multidimentional hierarchy (key, name, description, properties and translations). Attribute can have one key or multiple key.",
          "",
          "Dataset"
        ]
      },
      {
        "index": 15,
        "values": [
          "Hierarchy",
          "Hierarchy contains set of levels of multidimentional hierarchy.",
          "",
          "Dataset"
        ]
      },
      {
        "index": 16,
        "values": [
          "Fact",
          "Fact of cube, containing keys with reference to attributes and measures. It can contain one or many keys and one or many measures.",
          "",
          "Dataset"
        ]
      },
      {
        "index": 17,
        "values": [
          "Settings",
          "Set of properties for preferences or any other property sets.",
          "",
          "Dataset"
        ]
      },
      {
        "index": 18,
        "values": [
          "Instance",
          "Instance of topology. Instance of specific platform to execute applications.",
          "",
          "Dataset"
        ]
      },
      {
        "index": 19,
        "values": [
          "Location",
          "Location specification for dataset layout on specific platform.",
          "",
          "Dataset"
        ]
      },
      {
        "index": 20,
        "values": [
          "Format",
          "Format for data in dataset in layout suporting different data formats.",
          "",
          "Dataset"
        ]
      },
      {
        "index": 21,
        "values": [
          "Schedule",
          "Schedule for data updates of dataset. Schedule present time sequence for data updates and as result punctuation for the data.",
          "",
          "Dataset"
        ]
      },
      {
        "index": 22,
        "values": [
          "Policy",
          "Policy for availability of data in dataset. Policy specify rules and requirements for data in dataset.",
          "",
          "Dataset"
        ]
      },
      {
        "index": 23,
        "values": [
          "Rule",
          "Ruled for data quality validation. Rules defined expressions and dependencies data required to meet.",
          "",
          "Dataset"
        ]
      },
      {
        "index": 24,
        "values": [
          "Control",
          "Control for visualization of elements in view. Control specify dataset needed to define all property of UI control.",
          "",
          "Dataset"
        ]
      },
      {
        "index": 25,
        "values": [
          "Transform",
          "Transform for activities in pipelines. Transform represents type of transformation can be applied to the data inside activity based on specification of inputs and outputs.",
          "",
          "Dataset"
        ]
      },
      {
        "index": 26,
        "values": [
          "RESTful API",
          "Interface as an RESTfull API.",
          "",
          "Interface"
        ]
      },
      {
        "index": 27,
        "values": [
          "Library API",
          "API for application to reference or import a library of code or of binary functions, and use the functions/routines from that library to perform actions and exchange information.",
          "",
          "Interface"
        ]
      },
      {
        "index": 28,
        "values": [
          "Store Procedure",
          "Relational database store procidure.",
          "",
          "Interface"
        ]
      },
      {
        "index": 29,
        "values": [
          "Data Flow",
          "Pipeline present data flow with transformations.",
          "",
          "Pipeline"
        ]
      },
      {
        "index": 30,
        "values": [
          "Work Flow",
          "Pipeline present work flow with API calls.",
          "",
          "Pipeline"
        ]
      },
      {
        "index": 31,
        "values": [
          "Schema",
          "Publication represent data schema.",
          "",
          "Publication"
        ]
      },
      {
        "index": 32,
        "values": [
          "RESTful API",
          "Publication represent data from RESTful API service.",
          "",
          "Publication"
        ]
      },
      {
        "index": 33,
        "values": [
          "User Interface",
          "View represents visual user interface.",
          "",
          "View"
        ]
      },
      {
        "index": 34,
        "values": [
          "Resource",
          "Topology used as resource specification for systems.",
          "",
          "Topology"
        ]
      },
      {
        "index": 35,
        "values": [
          "Column",
          "Column of relational table.",
          "Count, Optional, Value, Format",
          "Field"
        ]
      },
      {
        "index": 36,
        "values": [
          "Property",
          "Property of event or attribute.",
          "Count, Optional, Value, Format",
          "Field"
        ]
      },
      {
        "index": 37,
        "values": [
          "Identity",
          "Identity of event or attribute.",
          "Type=Structure, Reference=/Identity, Keys=false, Optional=false",
          "Field"
        ]
      },
      {
        "index": 38,
        "values": [
          "Key",
          "key for attribute.",
          "Count, Optional=false, Format",
          "Field"
        ]
      },
      {
        "index": 39,
        "values": [
          "Name",
          "Name of enum or attribute.",
          "Type=String, Optional",
          "Field"
        ]
      },
      {
        "index": 40,
        "values": [
          "Description",
          "Description of enum or attribute.",
          "Type=String, Optional",
          "Field"
        ]
      },
      {
        "index": 41,
        "values": [
          "Value",
          "Attribute value.",
          "Count, Optional, Value, Format",
          "Field"
        ]
      },
      {
        "index": 42,
        "values": [
          "Value1",
          "Attribute value additional. Used for enummerators containing multiple values used in different cases. For example 3 latter country identity.",
          "Count, Optional, Value, Format",
          "Field"
        ]
      },
      {
        "index": 43,
        "values": [
          "Value2",
          "Attribute value additional. Used in identifiers, when it have more than two values to identify entity.",
          "Count, Optional, Value, Format",
          "Field"
        ]
      },
      {
        "index": 44,
        "values": [
          "Code",
          "Attribute code contains numeric code. Used in enumerators to identify column with numeric code.",
          "Count, Optional, Value, Format",
          "Field"
        ]
      },
      {
        "index": 45,
        "values": [
          "Level",
          "Level of multidimentional hierarchy.",
          "Type=Reference, Value",
          "Field"
        ]
      },
      {
        "index": 46,
        "values": [
          "Translation",
          "Translation for name of enum or attribute.",
          "Type=String, Optional",
          "Field"
        ]
      },
      {
        "index": 47,
        "values": [
          "Translations",
          "List of translations for identity and values",
          "Count=0,Type=Structure, Reference=/Translation, Keys=false, Optional=true",
          "Field"
        ]
      },
      {
        "index": 48,
        "values": [
          "Measure",
          "Aggregatable value. Used in multidimensional facts.",
          "Count, Optional, Value, Format, Aggregate",
          "Field"
        ]
      },
      {
        "index": 49,
        "values": [
          "Internal",
          "Internal usage for list of field attributes.",
          "Order, Usage, Type, Access, Privacy, Rules, Properties",
          "Field"
        ]
      }
    ],
    "examples": []
  }
}